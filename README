Simple multimethod-like functionality for JavaScript.

Example usage:

  var sound = multimethod(function(o){ return o.type; })
                .when('dog',function(o) { return "bark"; })
                .when('cat',function(o) { return "meow"; })
                .default(function(o) { return "?"; });
  console.log(sound({type:'dog'})); // bark
  console.log(sound({type:'cat'})); // meow
  console.log(sound({type:'horse'})); // ?
  sound.when('horse',function(o) { return "neigh"; });
  console.log(sound({type:'horse'})); // neigh

multimethod's methods:

 - constructor( [fn | string] ): If empty, identity projection used, otherwise same as project.
 - project(fn | string): Sets the multimethod's projection function. String values are transformed into a pluck function which projects a single property from an object argument.
 - when(match, fn | value): Add a method when the projected value matches 'match'. If a non-function value is provided it will be used. Using the same match value twice will override previously set match value and method.
 - remove(match): Remove a method/match pair.
 - default(fn | value): Catch-all case when no other matched method is found.

Dependencies:
 
 - Underscore.js
